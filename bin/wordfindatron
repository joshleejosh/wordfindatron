#!/usr/bin/env node

var data = require('../src/model/data');
var puzzle = require('../src/model/puzzle');

var gridSize = 6;
if (process.argv.length > 2) {
    gridSize = parseInt(process.argv[2], 10);
}
var numWords = 5;
if (process.argv.length > 3) {
    numWords = parseInt(process.argv[3], 10);
}
var seed = 0;
if (process.argv.length > 4) {
    seed = parseInt(process.argv[4], 10);
}

data.load(null, function() {
    var p;
    for (var i=0; i<10; i++) {
        try {
            p = new puzzle.Puzzle(gridSize, seed);
            p.generate(numWords);
            break;
        } catch (e) {
            if (e instanceof puzzle.PuzzleConflictError) {
                console.log(e.message + ', retrying')
            } else {
                throw e;
            }
        }
    }

    if (p) {
        //console.log(p.answerGrid().toString());
        // do a serialization roundtrip, to make sure it's clean.
        var s = p.serialize();
        var q = puzzle.deserialize(s);
        console.log(q.answers.map(function (a) { return a.word; }).join(' '));
        console.log(q.grid.toString());
    } else {
        console.log('catastrophic!');
    }
});

