#!/usr/bin/env node

var data = require('../src/model/data');
var puzzle = require('../src/model/puzzle');

var gridSize = 8;
if (process.argv.length > 2) {
    gridSize = parseInt(process.argv[2], 10);
}

var density = 0.5;
if (process.argv.length > 3) {
    density = parseFloat(process.argv[3]);
}

var wordlen = 0.5;
if (process.argv.length > 4) {
    wordlen = parseFloat(process.argv[4]);
}

var seed = 0;
if (process.argv.length > 5) {
    seed = parseInt(process.argv[5], 10);
}

var nPuzzles = 1;

data.load(null, function() {
    var times = [];
    for (var i=0; i<nPuzzles; i++) {
        var timea = new Date().getTime();
        var p = puzzle.makeFromParameters(gridSize, density, wordlen, seed);
        var timeb = new Date().getTime();
        times.push((timeb - timea));

        if (p) {
            console.log(p.answerGrid().toString());
            console.log(p.answers.map(function (a) { return a.word; }).join(' '));
            //console.log(p.size, p.answers.length, s.indexOf('-'), s.indexOf('_'), p.seed);
            console.log(p.grid.toString());
            p.reportStats();
        } else {
            console.log('catastrophic!');
        }
    }

    if (times.length) {
        var avgtime = times.reduce((a,b)=>a+b) / times.length;
        console.log('['+times.length+'] puzzles, avg time ['+avgtime+']');
    }
});

